<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Scrib</title>
    <style>
      * {
          margin: 0;
          padding: 0;
          box-sizing: border-box;
      }
      #main {
          padding: 1em;
          background-color: #eee;
      }
      .card {
          display: inline-block;
          background: #ffffff;
          box-shadow: 0 0 8px rgba(0, 0, 0, 0.2),
                      0 1px 2px rgba(0, 0, 0, 0.4);
          width: 12em;
          height: 16em;
          overflow: hidden;
          padding: 0.5em;
          margin: 1em;
          border: 4px solid #fff;
          white-space: pre-wrap;
      }
      .card.selected {
          border-color: #00c9ff;
      }
      #prompt-box {
          margin-left: auto;
          margin-right: auto;
          width: 24em;
      }
      #prompt {
          padding: 0.25em 0.5em;
          font-size: 1.4em;
          width: 100%;
          border: none;
          box-shadow: 0 0 8px rgba(0, 0, 0, 0.2),
                      0 1px 2px rgba(0, 0, 0, 0.4);
      }
      .google-keep-note .title {
          font-weight: bold;
      }
    </style>
  </head>
  <body>
    <div id="main">
      <div id="prompt-box">
        <input id="prompt" type="text" autofocus="autofocus">
      </div>
      <div id="card-holder">
      </div>
    </div>
    <script>
      // APIs
      function add(content, callback) {
          // Invoke 'add' API
          var req = new XMLHttpRequest();
          req.open('POST', '/add', true);
          req.setRequestHeader('Content-Type', 'text/plain');
          req.onload = function() {
              if (this.status >= 200 && this.status < 400) {
                  var data = JSON.parse(this.response);
                  if (data === true) {
                      callback();
                  }
                  else {
                  }
              }
              else {
              }
          };
          req.onerror = function() {
          };
          req.send(content);
      }

      function list(callback) {
          // Invoke 'list' API
          var req = new XMLHttpRequest();
          req.open('GET', '/list', true);
          req.onload = function() {
              if (this.status >= 200 && this.status < 400) {
                  var data = JSON.parse(this.response);
                  callback(data);
              }
              else {
              }
          };
          req.onerror = function() {
          };
          req.send();
      }

      // Commands
      function dispatch(cmd, args) {
          if (cmd === 'find') {
              find(args);
          }
          else {
              console.log('unknown command');
          }
      }

      function find(queries) {
          list(function(data) {
              var filtered_data = [];
              // add matched scribs
              for (var i = 0; i < data.length; ++i) {
                  var scrib = data[i];
                  if (queries.every(function(arg) { return scrib.content.match(arg); })) {
                      filtered_data.push(scrib);
                  }
              }
              reload_data(filtered_data);
          });
      }

      // UI
      function reload_data(data) {
          var card_holder = document.querySelector('#card-holder');
          // delete cards
          var cards = card_holder.querySelectorAll('.card');
          for (var i = 0; i < cards.length; ++i) {
              cards[i].remove();
          }
          // add cards
          for (var i = 0; i < data.length; ++i) {
              var scrib = data[i];
              var card = document.createElement('div');
              card.addEventListener('click', function() {
                  this.classList.toggle('selected');
              });
              card.classList.add('card');

              // rendering
              if (scrib.tags.indexOf('parsable-as-json') >= 0 &&
                  scrib.tags.indexOf('imported-from-google-keep'))
              {
                  var keep_note = JSON.parse(scrib.content);
                  var title = document.createTextNode(keep_note.title);
                  var content = document.createTextNode(keep_note.content);

                  var note_elem = document.createElement('div');
                  note_elem.classList.add('google-keep-note');

                  if (title.length > 0) {
                      var title_elem = document.createElement('div');
                      title_elem.classList.add('title');
                      title_elem.appendChild(title);
                      note_elem.appendChild(title_elem);
                  }

                  var content_elem = document.createElement('div');
                  content_elem.classList.add('content');
                  content_elem.appendChild(content);
                  note_elem.appendChild(content_elem);

                  card.appendChild(note_elem);
              }
              else {
                  var text = document.createTextNode(scrib.content);
                  card.appendChild(text);
              }
              card_holder.appendChild(card);
          }
      }

      var prompt = document.querySelector('#prompt');
      prompt.addEventListener('keypress', function(e) {
          if (e.which == 13) {
              var input = this.value;
              if (input.substr(0, 1) === '/') {
                  var commandline = input.substr(1);
                  var parsed_commandline = commandline.split(/ +/g);
                  var command = parsed_commandline.shift();
                  var args = parsed_commandline;
                  dispatch(command, args);
              }
              else if (input.length > 0) {
                  add(input, function() { list(reload_data); });
              }
              else {
                  list(reload_data);
              }
          }
      });

      list(reload_data);
    </script>
  </body>
</html>
